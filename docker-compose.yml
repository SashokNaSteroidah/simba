version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: apps/main/Dockerfile
    expose:
      - "3001"
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://root:root@postgres:5432/root?schema=kursach&pgbouncer=true&TrustServerCertificate=true
      - SECRET_FOR_JWT=Ahv)y,i]U9Q(QE_
      - MAIN_PORT=3001
      - MAIN_HOST=app
      - AUTH_PORT=3002
      - AUTH_HOST=auth
      - URL_OTEL_TRASES=http://signoz-otel-collector:4318/v1/traces
    depends_on:
      - postgres
      - nginx

  auth:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    expose:
      - "3002"
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://root:root@postgres:5432/root?schema=kursach&pgbouncer=true&TrustServerCertificate=true
      - SECRET_FOR_JWT=Ahv)y,i]U9Q(QE_
      - AUTH_PORT=3002
      - AUTH_HOST=auth
      - AUTH_REDIS_HOST=redis
      - AUTH_REDIS_URL=redis://redis:6379/0
      - AUTH_REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379
      - URL_OTEL_TRASES=http://signoz-otel-collector:4318/v1/traces
    depends_on:
      - postgres
      - redis

  redis:
    image: redis
    restart: always
    expose:
      - "6379"
    volumes:
      - redisdata:/var/lib/redis/data

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "root"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  #  minio:
  #    image: minio/minio
  #    ports:
  #      - '9001:9000'
  #    environment:
  #      MINIO_ACCESS_KEY: minio
  #      MINIO_SECRET_KEY: minio123
  #    command:
  #      - server
  #      - /data
  #    healthcheck:
  #      test: [ 'CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live' ]
  #      interval: 30s
  #      timeout: 20s
  #      retries: 3

  nginx:
    image: nginx:latest
    ports:
      - "3001:3001"
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

volumes:
  pgdata:
  redisdata:

networks:
  default:
    driver: bridge
    name: simba
